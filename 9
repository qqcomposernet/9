def func2(arg5, arg6):
    var17 = func3(arg5, arg6)
    var22 = func6(arg6, var17)
    def func7(arg23, arg24):
        var25 = arg24 | (1361010341 ^ -946)
        var26 = (var17 | ((1159707469 - (-552 + -1072539181) & var25) ^ ((arg23 & var22 ^ arg24) + arg5 | 248284977 | ((((arg6 & arg6 ^ arg6 + arg5 - var17) ^ arg6) | 706) - arg5) & arg6 & arg6 & var17))) - arg5
        var27 = arg23 & (var22 | var22)
        var28 = arg6 ^ arg6 | -597 ^ (((arg5 | var25 & arg23) - arg24 & arg5 & (var25 & (arg24 - ((arg24 - (var22 | arg24) - (712831042 - 944) + arg6) + arg6) | arg6) ^ arg5)) - var17) + arg5 + var17
        result = var28 & var25
        return result
    var29 = func7(arg5, var22)
    var33 = func8(var22, arg5)
    var34 = var22 - var29
    var35 = (-220 & 745 - var33) + var34
    var36 = (1569586118 | var34) ^ var34 + var29
    var37 = var36 | arg6
    var38 = var35 - var33
    if var29 < var37:
        var39 = var17 + ((var34 + var37) + var17)
    else:
        var39 = var22 & -1808007233
    var40 = (var22 & arg6) | var37 + var17
    var41 = (var17 + var34) + var35 + arg6
    if var33 < var33:
        var42 = arg6 - arg5 | var36 & var35
    else:
        var42 = arg6 ^ var41 & var38
    var43 = var17 ^ var17
    var44 = (var33 ^ var36) & var43 - var29
    if var43 < var22:
        var45 = var43 & var41
    else:
        var45 = var36 ^ (var33 & var37 | var44)
    var46 = (-841444651 + arg6) | var40 | var37
    var47 = (var35 - var22) & 987
    result = (var36 - ((var46 + arg5) + var17 ^ ((arg6 + (var41 ^ arg6)) & var35)) | var46 & var43) - var35
    return result
def func6(arg18, arg19):
    var20 = 0
    for var21 in range(42):
        var20 += arg18 ^ 4 ^ var21
    return var20
def func3(arg7, arg8):
    var11 = class4()
    for var12 in range(37):
        var13 = var11.func5
        var13(arg8, arg7)
    var14 = arg8 + 642
    var15 = -81 ^ arg8 - (((var14 - 713) + (arg7 ^ 1532685811 ^ arg8) & var14 - arg8 ^ (var14 & arg8) | (-66892891 & (((arg7 & var14) | arg7) - -749695183 ^ arg8 & arg7)) | -927272991 | 476) ^ arg8) ^ 787
    var16 = ((arg8 + var14) + (arg7 | arg8 & ((var15 | 98558916) - ((-1849738674 + arg7) + arg8) ^ (var14 - (var14 - (arg7 ^ arg7 ^ var15 | var14 + arg7)) - arg8) - arg8 | arg7 ^ var14)) ^ -1448730983) | -343
    result = arg7 & -559586978 | ((arg8 | 948) | (var15 | -536)) + (340 - arg8 - arg7)
    return result
class class4(object):
    def func5(self, arg9, arg10):
        result = arg9 ^ -1
        return result
def func1(arg1, arg2):
    var3 = (arg2 - arg1) ^ arg1
    var4 = (-655 - (arg2 - var3)) - var3 + 615
    result = var4 + -1971487564 + (arg2 | var3 + arg1) & arg2
    return result
def func8(arg30, arg31):
    def func9(acc, rest):
        var32 = 3 - (acc ^ -6)
        if acc == 0:
            return var32
        else:
            result = func9(acc - 1, var32)
            return result
    result = func9(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 48'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg5, arg6):
    var17 = func3(arg5, arg6)
    var22 = func6(arg6, var17)
    def func7(arg23, arg24):
        var25 = arg24 | (1361010341 ^ -946)
        var26 = (var17 | ((1159707469 - (-552 + -1072539181) & var25) ^ ((arg23 & var22 ^ arg24) + arg5 | 248284977 | ((((arg6 & arg6 ^ arg6 + arg5 - var17) ^ arg6) | 706) - arg5) & arg6 & arg6 & var17))) - arg5
        var27 = arg23 & (var22 | var22)
        var28 = arg6 ^ arg6 | -597 ^ (((arg5 | var25 & arg23) - arg24 & arg5 & (var25 & (arg24 - ((arg24 - (var22 | arg24) - (712831042 - 944) + arg6) + arg6) | arg6) ^ arg5)) - var17) + arg5 + var17
        result = var28 & var25
        return result
    var29 = func7(arg5, var22)
    var33 = func8(var22, arg5)
    var34 = var22 - var29
    var35 = (-220 & 745 - var33) + var34
    var36 = (1569586118 | var34) ^ var34 + var29
    var37 = var36 | arg6
    var38 = var35 - var33
    if var29 < var37:
        var39 = var17 + ((var34 + var37) + var17)
    else:
        var39 = var22 & -1808007233
    var40 = (var22 & arg6) | var37 + var17
    var41 = (var17 + var34) + var35 + arg6
    if var33 < var33:
        var42 = arg6 - arg5 | var36 & var35
    else:
        var42 = arg6 ^ var41 & var38
    var43 = var17 ^ var17
    var44 = (var33 ^ var36) & var43 - var29
    if var43 < var22:
        var45 = var43 & var41
    else:
        var45 = var36 ^ (var33 & var37 | var44)
    var46 = (-841444651 + arg6) | var40 | var37
    var47 = (var35 - var22) & 987
    result = (var36 - ((var46 + arg5) + var17 ^ ((arg6 + (var41 ^ arg6)) & var35)) | var46 & var43) - var35
    return result
def func6(arg18, arg19):
    var20 = 0
    for var21 in range(42):
        var20 += arg18 ^ 4 ^ var21
    return var20
def func3(arg7, arg8):
    var11 = class4()
    for var12 in range(37):
        var13 = var11.func5
        var13(arg8, arg7)
    var14 = arg8 + 642
    var15 = -81 ^ arg8 - (((var14 - 713) + (arg7 ^ 1532685811 ^ arg8) & var14 - arg8 ^ (var14 & arg8) | (-66892891 & (((arg7 & var14) | arg7) - -749695183 ^ arg8 & arg7)) | -927272991 | 476) ^ arg8) ^ 787
    var16 = ((arg8 + var14) + (arg7 | arg8 & ((var15 | 98558916) - ((-1849738674 + arg7) + arg8) ^ (var14 - (var14 - (arg7 ^ arg7 ^ var15 | var14 + arg7)) - arg8) - arg8 | arg7 ^ var14)) ^ -1448730983) | -343
    result = arg7 & -559586978 | ((arg8 | 948) | (var15 | -536)) + (340 - arg8 - arg7)
    return result
class class4(object):
    def func5(self, arg9, arg10):
        result = arg9 ^ -1
        return result
def func1(arg1, arg2):
    var3 = (arg2 - arg1) ^ arg1
    var4 = (-655 - (arg2 - var3)) - var3 + 615
    result = var4 + -1971487564 + (arg2 | var3 + arg1) & arg2
    return result
def func8(arg30, arg31):
    def func9(acc, rest):
        var32 = 3 - (acc ^ -6)
        if acc == 0:
            return var32
        else:
            result = func9(acc - 1, var32)
            return result
    result = func9(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 48'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg5, arg6):
    var17 = func3(arg5, arg6)
    var22 = func6(arg6, var17)
    def func7(arg23, arg24):
        var25 = arg24 | (1361010341 ^ -946)
        var26 = (var17 | ((1159707469 - (-552 + -1072539181) & var25) ^ ((arg23 & var22 ^ arg24) + arg5 | 248284977 | ((((arg6 & arg6 ^ arg6 + arg5 - var17) ^ arg6) | 706) - arg5) & arg6 & arg6 & var17))) - arg5
        var27 = arg23 & (var22 | var22)
        var28 = arg6 ^ arg6 | -597 ^ (((arg5 | var25 & arg23) - arg24 & arg5 & (var25 & (arg24 - ((arg24 - (var22 | arg24) - (712831042 - 944) + arg6) + arg6) | arg6) ^ arg5)) - var17) + arg5 + var17
        result = var28 & var25
        return result
    var29 = func7(arg5, var22)
    var33 = func8(var22, arg5)
    var34 = var22 - var29
    var35 = (-220 & 745 - var33) + var34
    var36 = (1569586118 | var34) ^ var34 + var29
    var37 = var36 | arg6
    var38 = var35 - var33
    if var29 < var37:
        var39 = var17 + ((var34 + var37) + var17)
    else:
        var39 = var22 & -1808007233
    var40 = (var22 & arg6) | var37 + var17
    var41 = (var17 + var34) + var35 + arg6
    if var33 < var33:
        var42 = arg6 - arg5 | var36 & var35
    else:
        var42 = arg6 ^ var41 & var38
    var43 = var17 ^ var17
    var44 = (var33 ^ var36) & var43 - var29
    if var43 < var22:
        var45 = var43 & var41
    else:
        var45 = var36 ^ (var33 & var37 | var44)
    var46 = (-841444651 + arg6) | var40 | var37
    var47 = (var35 - var22) & 987
    result = (var36 - ((var46 + arg5) + var17 ^ ((arg6 + (var41 ^ arg6)) & var35)) | var46 & var43) - var35
    return result
def func6(arg18, arg19):
    var20 = 0
    for var21 in range(42):
        var20 += arg18 ^ 4 ^ var21
    return var20
def func3(arg7, arg8):
    var11 = class4()
    for var12 in range(37):
        var13 = var11.func5
        var13(arg8, arg7)
    var14 = arg8 + 642
    var15 = -81 ^ arg8 - (((var14 - 713) + (arg7 ^ 1532685811 ^ arg8) & var14 - arg8 ^ (var14 & arg8) | (-66892891 & (((arg7 & var14) | arg7) - -749695183 ^ arg8 & arg7)) | -927272991 | 476) ^ arg8) ^ 787
    var16 = ((arg8 + var14) + (arg7 | arg8 & ((var15 | 98558916) - ((-1849738674 + arg7) + arg8) ^ (var14 - (var14 - (arg7 ^ arg7 ^ var15 | var14 + arg7)) - arg8) - arg8 | arg7 ^ var14)) ^ -1448730983) | -343
    result = arg7 & -559586978 | ((arg8 | 948) | (var15 | -536)) + (340 - arg8 - arg7)
    return result
class class4(object):
    def func5(self, arg9, arg10):
        result = arg9 ^ -1
        return result
def func1(arg1, arg2):
    var3 = (arg2 - arg1) ^ arg1
    var4 = (-655 - (arg2 - var3)) - var3 + 615
    result = var4 + -1971487564 + (arg2 | var3 + arg1) & arg2
    return result
def func8(arg30, arg31):
    def func9(acc, rest):
        var32 = 3 - (acc ^ -6)
        if acc == 0:
            return var32
        else:
            result = func9(acc - 1, var32)
            return result
    result = func9(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 48'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg5, arg6):
    var17 = func3(arg5, arg6)
    var22 = func6(arg6, var17)
    def func7(arg23, arg24):
        var25 = arg24 | (1361010341 ^ -946)
        var26 = (var17 | ((1159707469 - (-552 + -1072539181) & var25) ^ ((arg23 & var22 ^ arg24) + arg5 | 248284977 | ((((arg6 & arg6 ^ arg6 + arg5 - var17) ^ arg6) | 706) - arg5) & arg6 & arg6 & var17))) - arg5
        var27 = arg23 & (var22 | var22)
        var28 = arg6 ^ arg6 | -597 ^ (((arg5 | var25 & arg23) - arg24 & arg5 & (var25 & (arg24 - ((arg24 - (var22 | arg24) - (712831042 - 944) + arg6) + arg6) | arg6) ^ arg5)) - var17) + arg5 + var17
        result = var28 & var25
        return result
    var29 = func7(arg5, var22)
    var33 = func8(var22, arg5)
    var34 = var22 - var29
    var35 = (-220 & 745 - var33) + var34
    var36 = (1569586118 | var34) ^ var34 + var29
    var37 = var36 | arg6
    var38 = var35 - var33
    if var29 < var37:
        var39 = var17 + ((var34 + var37) + var17)
    else:
        var39 = var22 & -1808007233
    var40 = (var22 & arg6) | var37 + var17
    var41 = (var17 + var34) + var35 + arg6
    if var33 < var33:
        var42 = arg6 - arg5 | var36 & var35
    else:
        var42 = arg6 ^ var41 & var38
    var43 = var17 ^ var17
    var44 = (var33 ^ var36) & var43 - var29
    if var43 < var22:
        var45 = var43 & var41
    else:
        var45 = var36 ^ (var33 & var37 | var44)
    var46 = (-841444651 + arg6) | var40 | var37
    var47 = (var35 - var22) & 987
    result = (var36 - ((var46 + arg5) + var17 ^ ((arg6 + (var41 ^ arg6)) & var35)) | var46 & var43) - var35
    return result
def func6(arg18, arg19):
    var20 = 0
    for var21 in range(42):
        var20 += arg18 ^ 4 ^ var21
    return var20
def func3(arg7, arg8):
    var11 = class4()
    for var12 in range(37):
        var13 = var11.func5
        var13(arg8, arg7)
    var14 = arg8 + 642
    var15 = -81 ^ arg8 - (((var14 - 713) + (arg7 ^ 1532685811 ^ arg8) & var14 - arg8 ^ (var14 & arg8) | (-66892891 & (((arg7 & var14) | arg7) - -749695183 ^ arg8 & arg7)) | -927272991 | 476) ^ arg8) ^ 787
    var16 = ((arg8 + var14) + (arg7 | arg8 & ((var15 | 98558916) - ((-1849738674 + arg7) + arg8) ^ (var14 - (var14 - (arg7 ^ arg7 ^ var15 | var14 + arg7)) - arg8) - arg8 | arg7 ^ var14)) ^ -1448730983) | -343
    result = arg7 & -559586978 | ((arg8 | 948) | (var15 | -536)) + (340 - arg8 - arg7)
    return result
class class4(object):
    def func5(self, arg9, arg10):
        result = arg9 ^ -1
        return result
def func1(arg1, arg2):
    var3 = (arg2 - arg1) ^ arg1
    var4 = (-655 - (arg2 - var3)) - var3 + 615
    result = var4 + -1971487564 + (arg2 | var3 + arg1) & arg2
    return result
def func8(arg30, arg31):
    def func9(acc, rest):
        var32 = 3 - (acc ^ -6)
        if acc == 0:
            return var32
        else:
            result = func9(acc - 1, var32)
            return result
    result = func9(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 48'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg5, arg6):
    var17 = func3(arg5, arg6)
    var22 = func6(arg6, var17)
    def func7(arg23, arg24):
        var25 = arg24 | (1361010341 ^ -946)
        var26 = (var17 | ((1159707469 - (-552 + -1072539181) & var25) ^ ((arg23 & var22 ^ arg24) + arg5 | 248284977 | ((((arg6 & arg6 ^ arg6 + arg5 - var17) ^ arg6) | 706) - arg5) & arg6 & arg6 & var17))) - arg5
        var27 = arg23 & (var22 | var22)
        var28 = arg6 ^ arg6 | -597 ^ (((arg5 | var25 & arg23) - arg24 & arg5 & (var25 & (arg24 - ((arg24 - (var22 | arg24) - (712831042 - 944) + arg6) + arg6) | arg6) ^ arg5)) - var17) + arg5 + var17
        result = var28 & var25
        return result
    var29 = func7(arg5, var22)
    var33 = func8(var22, arg5)
    var34 = var22 - var29
    var35 = (-220 & 745 - var33) + var34
    var36 = (1569586118 | var34) ^ var34 + var29
    var37 = var36 | arg6
    var38 = var35 - var33
    if var29 < var37:
        var39 = var17 + ((var34 + var37) + var17)
    else:
        var39 = var22 & -1808007233
    var40 = (var22 & arg6) | var37 + var17
    var41 = (var17 + var34) + var35 + arg6
    if var33 < var33:
        var42 = arg6 - arg5 | var36 & var35
    else:
        var42 = arg6 ^ var41 & var38
    var43 = var17 ^ var17
    var44 = (var33 ^ var36) & var43 - var29
    if var43 < var22:
        var45 = var43 & var41
    else:
        var45 = var36 ^ (var33 & var37 | var44)
    var46 = (-841444651 + arg6) | var40 | var37
    var47 = (var35 - var22) & 987
    result = (var36 - ((var46 + arg5) + var17 ^ ((arg6 + (var41 ^ arg6)) & var35)) | var46 & var43) - var35
    return result
def func6(arg18, arg19):
    var20 = 0
    for var21 in range(42):
        var20 += arg18 ^ 4 ^ var21
    return var20
def func3(arg7, arg8):
    var11 = class4()
    for var12 in range(37):
        var13 = var11.func5
        var13(arg8, arg7)
    var14 = arg8 + 642
    var15 = -81 ^ arg8 - (((var14 - 713) + (arg7 ^ 1532685811 ^ arg8) & var14 - arg8 ^ (var14 & arg8) | (-66892891 & (((arg7 & var14) | arg7) - -749695183 ^ arg8 & arg7)) | -927272991 | 476) ^ arg8) ^ 787
    var16 = ((arg8 + var14) + (arg7 | arg8 & ((var15 | 98558916) - ((-1849738674 + arg7) + arg8) ^ (var14 - (var14 - (arg7 ^ arg7 ^ var15 | var14 + arg7)) - arg8) - arg8 | arg7 ^ var14)) ^ -1448730983) | -343
    result = arg7 & -559586978 | ((arg8 | 948) | (var15 | -536)) + (340 - arg8 - arg7)
    return result
class class4(object):
    def func5(self, arg9, arg10):
        result = arg9 ^ -1
        return result
def func1(arg1, arg2):
    var3 = (arg2 - arg1) ^ arg1
    var4 = (-655 - (arg2 - var3)) - var3 + 615
    result = var4 + -1971487564 + (arg2 | var3 + arg1) & arg2
    return result
def func8(arg30, arg31):
    def func9(acc, rest):
        var32 = 3 - (acc ^ -6)
        if acc == 0:
            return var32
        else:
            result = func9(acc - 1, var32)
            return result
    result = func9(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 48'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
